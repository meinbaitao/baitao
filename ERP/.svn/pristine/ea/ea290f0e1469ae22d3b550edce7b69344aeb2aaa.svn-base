/**
 * Copyright &copy; 2012-2014 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.bt.modules.finance.web;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.common.utils.IdGen;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.bt.modules.contract.entity.BtgConJiaContractDetail;
import com.bt.modules.contract.entity.Laborcontract;
import com.bt.modules.contract.entity.Laboritems;
import com.bt.modules.contract.service.BtgConJiaContractDetailService;
import com.bt.modules.contract.service.LaborcontractService;
import com.bt.modules.contract.service.LaboritemsService;
import com.bt.modules.finance.entity.LaborSettlement;
import com.bt.modules.finance.service.LaborSettlementService;

/**
 * 劳务结算Controller
 * @author yhh
 * @version 2015-12-15
 */
@Controller
@RequestMapping(value = "${adminPath}/finance/laborSettlement")
public class LaborSettlementController extends BaseController {

	@Autowired
	private LaborSettlementService laborSettlementService;
	@Autowired
	private LaborcontractService laborContractService;
	@Autowired
	private LaboritemsService laborItemsService;
	@Autowired
	private BtgConJiaContractDetailService jiaContractDetailService;
	
	@ModelAttribute
	public LaborSettlement get(@RequestParam(required=false) String id) {
		LaborSettlement entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = laborSettlementService.get(id);
		}
		if (entity == null){
			entity = new LaborSettlement();
		}
		return entity;
	}
	
	@RequestMapping(value = {"list", ""})
	public String list(LaborSettlement laborSettlement, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<LaborSettlement> page = laborSettlementService.findPage(new Page<LaborSettlement>(request, response), laborSettlement); 
		model.addAttribute("page", page);
		return "modules/finance/laborSettlementList";
	}

	@RequestMapping(value = "form")
	public String form(LaborSettlement laborSettlement, Model model) {
		//是否新记录
		if(laborSettlement.getIsNewRecord()){
			laborSettlement.setId(IdGen.uuid());
		}else{
			model.addAttribute("flag", "view");
			
//			Laborcontract contract = laborContractService.get(laborSettlement.getLaborContract());
//			if(null != contract.getHouse()){
//				String[] houseType= contract.getHouse().split(",");
//				model.addAttribute("houseTypeOptions", houseType);
//			}
//			if(null != contract.getBuildings()){
//				String[] building = contract.getBuildings().split(",");
//				model.addAttribute("buildingOptions", building);
//			}
		}
		//劳务合同列表
		Laborcontract contract = new Laborcontract();
		List<Laborcontract> contractList = laborContractService.findList(contract);
//		List<Laborcontract> contractList = laborContractService.findFinishBuildilgs();
		model.addAttribute("contractList", contractList);
		
		model.addAttribute("laborSettlement", laborSettlement);
		return "modules/finance/laborSettlementForm";
	}

	@RequestMapping(value = "save")
	public String save(LaborSettlement laborSettlement, Model model, RedirectAttributes redirectAttributes) {
		laborSettlementService.save(laborSettlement);
		addMessage(redirectAttributes, "保存劳务结算成功");
		return "redirect:"+Global.getAdminPath()+"/finance/laborSettlement/?repage";
	}
	
	@RequestMapping(value = "delete")
	public String delete(LaborSettlement laborSettlement, RedirectAttributes redirectAttributes) {
		laborSettlementService.delete(laborSettlement);
		addMessage(redirectAttributes, "删除劳务结算成功");
		return "redirect:"+Global.getAdminPath()+"/finance/laborSettlement/?repage";
	}

	/**
	 * Aajx由合同id获取劳务合同
	 * @param request
	 * @param response
	 * @return
	 */
	@ResponseBody
	@RequestMapping("getContractById")
	public Laborcontract getContractById(HttpServletRequest request, HttpServletResponse response){
		String contractId = request.getParameter("contractId");
		Laborcontract contract = laborContractService.get(contractId);
		//劳务清单
		Laboritems laborItem = new Laboritems();
		laborItem.setContractId(contractId);
		List<Laboritems> detialList = laborItemsService.findList(laborItem);
		contract.setDetailList(detialList);
		//甲方合同楼栋信息
		BtgConJiaContractDetail jiaContractDetail = jiaContractDetailService.getByLaborContractId(contractId);
		contract.setJiaContractDetail(jiaContractDetail);
		return contract;
	}
	
}