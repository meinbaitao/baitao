package com.bt.modules.utils;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

import javax.servlet.http.HttpServletRequest;

import org.springframework.web.multipart.MultipartFile;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.utils.StringUtils;

/**
 * 文件上传工具类
 * 
 * @author xjp
 * @date 2015-8-17
 */
public class UploadUtils {
	/**
	 * 表单字段常量
	 */
	public static final String FORM_FIELDS = "form_fields";
	/**
	 * 文件域常量
	 */
	public static final String FILE_FIELDS = "file_fields";

	// 最大文件大小
	private String maxSize = Global.getConfig("web.maxUploadSize");

	// 文件保存目录路径
	private String savePath;
	
	
	public UploadUtils() {
		
	}

	/**
	 * 文件上传
	 * @param savePath 文件保存路径
	 * @param saveUrl 文件保存目录URL
	 * @param request
	 * @return infos info[0] 验证文件域返回错误信息 info[1] 上传文件错误信息 info[2] savePath info[3] saveUrl info[4] fileUrl
	 */
	public String uploadFile(HttpServletRequest request,MultipartFile file,String savePath) {
		
		//判断传入的目录是否存在，如果不存在则自动创建
		File saveDirFile = new File(savePath);
		if (!saveDirFile.exists()) {
			saveDirFile.mkdirs();
		}
		String info = validateField(request,file,saveDirFile);
		if("true".equals(info)){
			int readByte = 0;
			FileOutputStream outs =null;
			InputStream is = null;
			try {
				// 打开源文件
				is = file.getInputStream();
				//打开目标文件的输出流
				outs = new FileOutputStream(saveDirFile+"/"+file.getOriginalFilename());
				byte[] buf = new byte[1024];
				// 一次读取1024个字节，当readByte为-1时表示文件已经读取完毕
				while ((readByte = is.read(buf)) != -1) {
					// 将读取的字节流写入到输出流
					outs.write(buf, 0, readByte);
				}
			}catch (FileNotFoundException e1) {
				e1.printStackTrace();
			}catch(IOException e){
				e.printStackTrace();
			}finally{
				if (outs != null) {
					try {
						outs.close();
					} catch (IOException oute) {
						oute.printStackTrace();
					}
				}
				if (is != null) {
					try {
						is.close();
					} catch (IOException ine) {
						ine.printStackTrace();
					}
				}
			}
		}
		return info;
	}

	/**
	 * 上传验证,并初始化文件目录
	 * 
	 * @param request
	 */
	private String validateField(HttpServletRequest request,MultipartFile file,File saveDirFile) {
		String errorInfo = "true";
		String contentType = request.getContentType();
		if (file == null || !contentType.startsWith("multipart")) {
			// TODO
			System.out.println("请求不包含multipart/form-data流");
			errorInfo = "请求不包含multipart/form-data流";
		} else if (Integer.parseInt(maxSize) < file.getSize()) {
			// TODO
			System.out.println("上传文件大小超出文件最大大小");
			errorInfo = "上传文件大小超出文件最大大小[" + maxSize + "]";
		} else if (!saveDirFile.isDirectory()) {// 检查目录
			// TODO
			errorInfo = "上传目录[" + savePath + "]不存在";
		}else if (file !=null && StringUtils.isEmpty(file.getOriginalFilename())) {// 检查目录
			// TODO
			errorInfo = "请选择文件";
		} 
		
		return errorInfo;
	}
}
