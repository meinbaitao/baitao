/**
 * Copyright &copy; 2012-2014 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.bt.modules.contract.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.bt.modules.contract.entity.Execution;
import com.bt.modules.contract.entity.Laborcontract;
import com.bt.modules.contract.entity.ManufContractBase;
import com.bt.modules.contract.entity.PurchasingContractBase;
import com.bt.modules.contract.service.ContractPrintService;
import com.bt.modules.contract.service.ExecutionService;
import com.bt.modules.contract.service.LaborcontractService;
import com.bt.modules.contract.service.ManufContractBaseService;
import com.bt.modules.utils.CommonUtils;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.common.web.BaseController;

/**
 * 合同台账Controller
 * @author yhh
 * @version 2015-12-01
 */
@Controller
@RequestMapping(value = "${adminPath}/contract/contractPrint")
public class ContractPrintController extends BaseController {

	@Autowired
	private ContractPrintService contractPrintService;
	
	@Autowired
	private ExecutionService executionService;
	
	@Autowired
	private ManufContractBaseService manufContractBaseService;
	
	@Autowired
	private LaborcontractService laborcontractService;
	
	@RequestMapping(value = {"list", ""})
	public String list(ManufContractBase manufContractBase,HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<ManufContractBase> page = manufContractBaseService.findPage(new Page<ManufContractBase>(request, response), manufContractBase);
		model.addAttribute("page", page);
		return "modules/contract/contractPrint";
	}
	
	@RequestMapping(value ="/purchasecontract")
	public String getPurchaseContractById(HttpServletRequest request, HttpServletResponse response, Model model) {
		PurchasingContractBase purchasingContractBase = new PurchasingContractBase();
		purchasingContractBase.setId(request.getParameter("id"));
		PurchasingContractBase data = contractPrintService.getPurchaseContractById(purchasingContractBase);
		model.addAttribute("purchasingcontractbase", data);
		if("1".equals(request.getParameter("type"))){
			return "modules/contract/purchasePrint_1";
		}else if("2".equals(request.getParameter("type"))){
			return "modules/contract/purchasePrint_2";
		}else if("3".equals(request.getParameter("type"))){
			return "modules/contract/purchasePrint_3";
		}else if("4".equals(request.getParameter("type"))){
			return "modules/contract/purchasePrint_4";
		}else if("5".equals(request.getParameter("type"))){
			return "modules/contract/purchasePrint_5";
		}
		return "";
	}
	
	
	@RequestMapping(value ="/laborcontract")
	public String getLaborContractById(HttpServletRequest request, HttpServletResponse response, Model model) {
		Laborcontract laborcontract = new Laborcontract();
		Execution execution = null;
		String contractpriceDX ="";
		String id = request.getParameter("id");
		if(null !=id && !"".equals(id)){
			laborcontract = laborcontractService.get(id);
			
			if (StringUtils.isNotBlank(laborcontract.getCtype())){
				execution = executionService.get(laborcontract.getCtype());
			}
			
			if(StringUtils.isNotBlank(laborcontract.getContractPrice())){
				contractpriceDX = CommonUtils.hangeToBig(Double.parseDouble(laborcontract.getContractPrice()));
			}
			
		}
		model.addAttribute("contractpriceDX", contractpriceDX);
		model.addAttribute("execution", execution);
		model.addAttribute("laborcontract", laborcontract);
		return "modules/contract/laborPrint_1";
	}
	
	@RequestMapping(value ="/print")
	public String getlist(HttpServletRequest request, HttpServletResponse response, Model model) {
		String id = request.getParameter("id");
		ManufContractBase manufcontractbase = contractPrintService.findTestData(id);
		model.addAttribute("manufcontractbase", manufcontractbase);
		return "modules/contract/word2html";
	}
}